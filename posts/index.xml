<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Atul Agarwal</title><link>https://www.atulagarwal.dev/posts/</link><description>Recent content in Posts on Atul Agarwal</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 03 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.atulagarwal.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding the Curve AMM, Part -1: StableSwap Invariant</title><link>https://www.atulagarwal.dev/posts/curveamm/stableswap/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.atulagarwal.dev/posts/curveamm/stableswap/</guid><description>It is common to integrate with decentralized exchanges (DEX) while building DeFi products. Curve is the most preferred choice when it comes to stable coins because of low slippage. However, to integrate with such protocols, one needs to clearly understand its automated market maker (AMM) design. Curve&amp;rsquo;s stableswap AMM algorithm is more complex and calculation-heavy than Uniswap&amp;rsquo;s constant product AMM.
In this post, I have explained the maths behind the stableswap invariant, the method used to solve it, and how it is used in the protocol while swapping tokens or finding other parameters.</description></item></channel></rss>